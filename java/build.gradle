plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version "1.8.21"
    id 'org.jetbrains.kotlin.plugin.lombok' version '1.8.0'
    id 'java-library'
    id("com.google.devtools.ksp").version("1.8.21-1.0.11") // Or latest version of KSP
}
apply plugin: 'base'
apply plugin: 'kotlin'

project.ext.protocol_ver = "1.6.0" // Build version
project.ext.protocol_ver_min = "1.6.0" // Minimum build

version = project.ext.protocol_ver


allprojects {
    group = 'com.github.Fernthedev'

    version = rootProject.version

    repositories {
        jcenter()
        mavenLocal()
        mavenCentral()

        maven {
            url = 'https://jitpack.io'
        }

        maven {
            url = 'https://oss.sonatype.org/content/groups/public'
        }

        maven {
            url = 'https://repo.maven.apache.org/maven2'
        }
    }
}

configure(allprojects.findAll { it.name != "light-chat" }) {
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: "org.jetbrains.kotlin.plugin.lombok"
    apply plugin: 'kotlin'
    apply plugin: 'java-library'
    apply plugin: 'com.google.devtools.ksp'

    ext.netty_ver = "4.1.92.Final"
    ext.protobuf_ver = "3.5.1"
    ext.jline_ver = "3.18.0"
    ext.log4j_ver = "2.19.0"

    repositories {
        jcenter()
        mavenLocal()
        mavenCentral()

        maven {
            url = 'https://jitpack.io'
        }

        maven {
            url = 'https://oss.sonatype.org/content/groups/public'
        }

        maven {
            url = 'https://repo.maven.apache.org/maven2'
        }
    }


    test {
        useJUnitPlatform()
    }

    dependencies {
        // gson replacement
        ksp("com.squareup.moshi:moshi-kotlin-codegen:1.15.0")
        implementation("com.squareup.moshi:moshi-kotlin:1.15.0")


        implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4")
        implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:1.6.4")

        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.1'

        api 'org.slf4j:slf4j-api:1.7.36'

        api "io.netty:netty-all:$netty_ver"
        implementation "io.netty:netty-transport-native-epoll:$netty_ver"
        implementation "io.netty:netty-transport-native-kqueue:$netty_ver"
        implementation "com.google.protobuf:protobuf-java:$protobuf_ver"
        implementation 'com.lmax:disruptor:3.4.4'
//        implementation platform('org.jetbrains.kotlin:kotlin-bom')

        implementation 'org.apache.commons:commons-lang3:3.12.0'
        api 'com.github.Fernthedev:fern-configmanager:1.3.0'
        implementation 'com.google.guava:guava:31.1-jre'
        implementation 'com.googlecode.json-simple:json-simple:1.1.1'
        compileOnly 'com.google.code.gson:gson:2.8.8'
        implementation 'com.github.Fernthedev:FernUtils:1.4.2'
        api group: 'org.apache.maven', name: 'maven-artifact', version: '3.8.4'
    }

    sourceCompatibility = '17'


//    tasks.withType(Javadoc).all { enabled = false }

    javadoc {
        failOnError = false
    }

    processResources {
//        from 'resources'

        inputs.property "version", project.protocol_ver
        inputs.property "minVersion", project.protocol_ver_min

        from(sourceSets.main.resources.srcDirs) {
            include 'variables.json'


            expand 'version': project.protocol_ver, 'minVersion': project.protocol_ver_min
        }

        duplicatesStrategy = DuplicatesStrategy.WARN
    }

    java {
        withSourcesJar()
        withJavadocJar()
        toolchain {
            languageVersion.set(JavaLanguageVersion.of(17))
        }
    }

    publishing {
        publications {
            maven(MavenPublication) {
                from(components.java)

                groupId = "${rootProject.group}.${rootProject.name}"
                version project.version
                artifactId = project.name

                println "Publishing $groupId:$artifactId:${project.version}"
            }
        }
    }


    sourceSets {
        main.kotlin.srcDirs += 'src/main/java'
        main.java.srcDirs += 'src/main/kotlin'
    }


    kotlin {
        jvmToolchain(17)
    }


}


