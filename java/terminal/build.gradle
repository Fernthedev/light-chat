//plugins {
//    id 'java'
//    id 'org.jetbrains.kotlin.jvm'
//}
//plugins {
//    id 'application'
//}
//apply com.github.fernthedev.client.plugin: 'com.github.johnrengelman.shadow'

plugins {
    id 'com.github.johnrengelman.shadow' version '6.1.0'
}

subprojects {
    apply plugin: 'com.github.johnrengelman.shadow'
//    apply com.github.fernthedev.client.plugin: 'application'
    group = "${project.parent.group}.terminal"
    version = "$protocol_ver"

    dependencies {
        implementation "org.jline:jline:$jline_ver"
        implementation "org.jline:jline-terminal-jansi:$jline_ver"
        implementation 'net.minecrell:terminalconsoleappender:1.2.0'
        implementation 'org.fusesource.jansi:jansi:2.3.3'
    }








    jar.dependsOn(shadowJar)
    shadowJar {
//        project.configurations.implementation.canBeResolved = true
//        configurations = [project.configurations.implementation]
        transform(com.github.jengelman.gradle.plugins.shadow.transformers.Log4j2PluginsCacheFileTransformer)
//        transform(Log4j2PluginsCacheFileTransformer)
        minimize() {
            exclude (dependency('io.netty:netty-transport.*:.*') )
            exclude (dependency('log4j:log4j:.*') )
            exclude (dependency('org.apache.logging.log4j:.*:.*') )
            exclude (dependency('org.slf4j:slf4j-api:.*') )
            exclude (dependency('commons-logging:.*:.*') )
            exclude (dependency('com.pi4j:.*:.*') )
            exclude (dependency('org.fusesource.jansi:.*:.*') )
            exclude (dependency('org.jline:.*:.*') )
            exclude (dependency('net.minecrell:.*:.*') )
            exclude (dependency('com.lmax:disruptor:.*'))
            exclude ('.**/Log4j2Plugins.dat' )
        }
    }
}


